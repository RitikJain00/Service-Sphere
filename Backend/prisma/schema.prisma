// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id              Int               @id @default(autoincrement())
  username        String            @unique
  password        String
  profile         CustomerProfile? // One-to-One Relationship
  upcommingOrders UpcommingOrders[]
  pastOrders      PastOrders[]
  favorites       Services[]        @relation("FavoritesRelation")
  cart            Services[]        @relation("CartRelation")
}

model Professional {
  id                Int                  @id @default(autoincrement())
  username          String               @unique
  password          String
  profile           ProfessionalProfile? // One-to-One Relationship
  services          Services[]
  UpcommingBookings UpcommingBookings[]
  PastBookings      PastBookings[]
}

model CustomerProfile {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  image       String?
  phone       String?
  address     String?
  city        String?
  pincode     String?
  country     String?

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
}

model ProfessionalProfile {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  image       String?
  phone       String?
  address     String?
  city        String?
  pincode     String?
  country     String?

  professional   Professional @relation(fields: [professionalId], references: [id])
  professionalId Int          @unique
}

model UpcommingOrders {
  id         Int        @id @default(autoincrement())
  services   Services[] @relation("OrderServicesRelation")
  total      Int
  gst        Int
  discount   Int
  grandTotal Int
  date       DateTime

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
}

model PastOrders {
  id         Int        @id @default(autoincrement())
  services   Services[] @relation("OrderServicesRelation")
  total      Int
  gst        Int
  discount   Int
  grandTotal Int
  date       DateTime

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
}

model UpcommingBookings {
  id       Int        @id @default(autoincrement())
  services Services[] @relation("BookingServiceRelation")
  Amount   Int

  date           DateTime
  professional   Professional @relation(fields: [professionalId], references: [id])
  professionalId Int
}

model PastBookings {
  id       Int        @id @default(autoincrement())
  services Services[] @relation("BookingServiceRelation")
  Amount   Int
  date     DateTime

  professional   Professional @relation(fields: [professionalId], references: [id])
  professionalId Int
}

model Services {
  id          Int      @id @default(autoincrement())
  name        String
  company     String
  description String
  category    String
  expireince  String
  location    String
  rating      Float?
  booking     String?
  price       Int
  time        DateTime

  professional   Professional @relation(fields: [professionalId], references: [id])
  professionalId Int

  upcommingorders   UpcommingOrders[]   @relation("OrderServicesRelation")
  pastorders        PastOrders[]        @relation("OrderServicesRelation")
  upcommingbookings UpcommingBookings[] @relation("BookingServiceRelation")
  pastbookings      PastBookings[]      @relation("BookingServiceRelation")
  favorites         Customer[]          @relation("FavoritesRelation")
  carts             Customer[]          @relation("CartRelation")
}
